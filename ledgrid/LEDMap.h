// Params for width and height
const uint8_t kMatrixWidth = 16;
const uint8_t kMatrixHeight = 30;

#define LAST_VISIBLE_LED 479
uint16_t XY (uint16_t x, uint16_t y) {
  // any out of bounds address maps to the first hidden pixel
  if ( (x >= kMatrixWidth) || (y >= kMatrixHeight) ) {
    return (LAST_VISIBLE_LED + 1);
  }

  const uint16_t XYTable[] = {
    29,  30,  89,  90, 149, 150, 209, 210, 269, 270, 329, 330, 389, 390, 449, 450,
    28,  31,  88,  91, 148, 151, 208, 211, 268, 271, 328, 331, 388, 391, 448, 451,
    27,  32,  87,  92, 147, 152, 207, 212, 267, 272, 327, 332, 387, 392, 447, 452,
    26,  33,  86,  93, 146, 153, 206, 213, 266, 273, 326, 333, 386, 393, 446, 453,
    25,  34,  85,  94, 145, 154, 205, 214, 265, 274, 325, 334, 385, 394, 445, 454,
    24,  35,  84,  95, 144, 155, 204, 215, 264, 275, 324, 335, 384, 395, 444, 455,
    23,  36,  83,  96, 143, 156, 203, 216, 263, 276, 323, 336, 383, 396, 443, 456,
    22,  37,  82,  97, 142, 157, 202, 217, 262, 277, 322, 337, 382, 397, 442, 457,
    21,  38,  81,  98, 141, 158, 201, 218, 261, 278, 321, 338, 381, 398, 441, 458,
    20,  39,  80,  99, 140, 159, 200, 219, 260, 279, 320, 339, 380, 399, 440, 459,
    19,  40,  79, 100, 139, 160, 199, 220, 259, 280, 319, 340, 379, 400, 439, 460,
    18,  41,  78, 101, 138, 161, 198, 221, 258, 281, 318, 341, 378, 401, 438, 461,
    17,  42,  77, 102, 137, 162, 197, 222, 257, 282, 317, 342, 377, 402, 437, 462,
    16,  43,  76, 103, 136, 163, 196, 223, 256, 283, 316, 343, 376, 403, 436, 463,
    15,  44,  75, 104, 135, 164, 195, 224, 255, 284, 315, 344, 375, 404, 435, 464,
    14,  45,  74, 105, 134, 165, 194, 225, 254, 285, 314, 345, 374, 405, 434, 465,
    13,  46,  73, 106, 133, 166, 193, 226, 253, 286, 313, 346, 373, 406, 433, 466,
    12,  47,  72, 107, 132, 167, 192, 227, 252, 287, 312, 347, 372, 407, 432, 467,
    11,  48,  71, 108, 131, 168, 191, 228, 251, 288, 311, 348, 371, 408, 431, 468,
    10,  49,  70, 109, 130, 169, 190, 229, 250, 289, 310, 349, 370, 409, 430, 469,
     9,  50,  69, 110, 129, 170, 189, 230, 249, 290, 309, 350, 369, 410, 429, 470,
     8,  51,  68, 111, 128, 171, 188, 231, 248, 291, 308, 351, 368, 411, 428, 471,
     7,  52,  67, 112, 127, 172, 187, 232, 247, 292, 307, 352, 367, 412, 427, 472,
     6,  53,  66, 113, 126, 173, 186, 233, 246, 293, 306, 353, 366, 413, 426, 473,
     5,  54,  65, 114, 125, 174, 185, 234, 245, 294, 305, 354, 365, 414, 425, 474,
     4,  55,  64, 115, 124, 175, 184, 235, 244, 295, 304, 355, 364, 415, 424, 475,
     3,  56,  63, 116, 123, 176, 183, 236, 243, 296, 303, 356, 363, 416, 423, 476,
     2,  57,  62, 117, 122, 177, 182, 237, 242, 297, 302, 357, 362, 417, 422, 477,
     1,  58,  61, 118, 121, 178, 181, 238, 241, 298, 301, 358, 361, 418, 421, 478,
     0,  59,  60, 119, 120, 179, 180, 239, 240, 299, 300, 359, 360, 419, 420, 479
  };

  uint16_t i = (y * kMatrixWidth) + x;
  uint16_t j = XYTable[i];
  return j;
}
